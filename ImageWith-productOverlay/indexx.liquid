<div class="product-showcase" 
    style="background-image: url('{{ section.settings.background_image | img_url: 'master' }}')">
  <div class="product-showcase__container">
    <h2 class="product-showcase__title">{{ section.settings.title }}</h2>
   
    <div class="product-slider">
      <button class="slider-arrow slider-arrow--prev" aria-label="Previous product">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>

      <div class="product-slider__track">
        {% for product in collections[section.settings.collection].products %}
          <div class="product-slide">
            <img src="{{ product.featured_image | img_url: 'medium' }}" 
                 alt="{{ product.featured_image.alt | escape }}"
                 class="product-slide__image"
                 loading="lazy"
                 width="300"
                 height="300">
            <h3 class="product-slide__title">{{ product.title }}</h3>
            <a href="{{ product.url }}" class="button">
              {% if product.has_only_default_variant %}
                CHOOSE COLOUR
              {% else %}
                SELECT OPTIONS
              {% endif %}
            </a>
          </div>
        {% endfor %}
      </div>

      <button class="slider-arrow slider-arrow--next" aria-label="Next product">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Product Showcase",
  "settings": [
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Face Sunscreen"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Product Collection"
    }
  ],
  "presets": [
    {
      "name": "Product Showcase",
      "category": "Products"
    }
  ]
}
{% endschema %}

<style>
.product-showcase {
  position: relative;
  min-height: 100vh;
  background-size: cover;
  background-position: center;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 40px 20px;
}

.product-showcase__container {
  max-width: 1200px;
  width: 100%;
  margin: 0 auto;
  text-align: center;
}

.product-showcase__title {
  color: #ffffff;
  font-size: 48px;
  margin-bottom: 40px;
}

.product-slider {
  position: relative;
  padding: 0 40px;
  overflow: hidden;
}

.product-slider__track {
  display: flex;
  transition: transform 0.3s ease;
}

.product-slide {
  flex: 0 0 100%;
  text-align: center;
}

.product-slide__image {
  max-width: 100%;
  height: auto;
  margin-bottom: 20px;
}

.product-slide__title {
  color: #ffffff;
  font-size: 24px;
  margin-bottom: 15px;
}

.slider-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 1;
}

.slider-arrow--prev {
  left: 0;
}

.slider-arrow--next {
  right: 0;
}

.button {
  display: inline-block;
  background: #ffffff;
  color: #000000;
  padding: 12px 24px;
  border-radius: 4px;
  text-decoration: none;
  font-weight: bold;
}

@media (max-width: 768px) {
  .product-showcase__title {
    font-size: 36px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const track = document.querySelector('.product-slider__track');
  const slides = track.querySelectorAll('.product-slide');
  const prevButton = document.querySelector('.slider-arrow--prev');
  const nextButton = document.querySelector('.slider-arrow--next');
  let currentIndex = 0;

  function updateSlidePosition() {
    track.style.transform = `translateX(-${currentIndex * 100}%)`;
  }

  function showSlide(index) {
    currentIndex = index;
    if (currentIndex < 0) {
      currentIndex = slides.length - 1;
    } else if (currentIndex >= slides.length) {
      currentIndex = 0;
    }
    updateSlidePosition();
  }

  prevButton.addEventListener('click', () => {
    showSlide(currentIndex - 1);
  });

  nextButton.addEventListener('click', () => {
    showSlide(currentIndex + 1);
  });

  // Initialize the first slide
  updateSlidePosition();
});
</script>